@using TeamStatusData.Enums
@model IEnumerable<TeamStatusData.Models.User>

@{
    Layout = "_Layout";
}

<!DOCTYPE html>

<html>
<head>
    <title>title</title>
</head>
<body>
<div class="container">
    <div class="row row-cols-xl-5 row-cols-md-3 row-cols-sm-6 row-cols-xs-12">
        @foreach (var user in @Model)
        {
            <div class="col">
                <div id="user-@user.Id" class="card mb-4 d-flex flex-column">
                    <img src="profile-circle-svgrepo-com.svg" class="card-img-top" alt="@user.Name">
                    <div class="card-body flex-grow-1">
                        <h5 class="card-title">@user.Name</h5>
                        <p class="card-text">@user.Status</p>
                    </div>
                    <form method="post">
                        <input type="hidden" asp-for="@user.Id"/>
                        <div class="form-group">
                            <label asp-for="@user.Status"></label>
                            <select asp-for="@user.Status" asp-items="Html.GetEnumSelectList<UserStatus>()"
                                    class="form-control" name="UserStatus"></select>
                        </div>
                        <button asp-action="UpdateUserStatus" asp-route-userId="@user.Id" type="submit" class="btn btn-primary">Update Status</button>
                    </form>
                </div>
            </div>
        }
    </div>
</div>
</body>
</html>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/userStatusHub")
        .build();

    connection.on("ReceiveUserStatusUpdate", (userId, status) => {
        // Find the element for the updated user and update the status text
        const userCard = document.getElementById(`user-${userId}`);
        if (userCard) {
            const statusElement = userCard.querySelector('.card-text');
            statusElement.textContent = status;
        }
    });

    connection.start().catch(err => console.error(err.toString()));

    // Add an event listener to each form to send the updated status to the server
    const forms = document.querySelectorAll('form');
    console.log(forms)
    forms.forEach(form => {
        form.addEventListener('submit', function (event) {
            const userId = this.querySelector('input[type="hidden"]').value;
            const status = this.querySelector('select[name="UserStatus"]').value;
        });
    });
</script>